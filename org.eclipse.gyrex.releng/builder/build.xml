<!--
    Copyright (c) 2010,2009 AGETO Service GmbH and others.
    All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v1.0 which accompanies this distribution,
    and is available at http://www.eclipse.org/legal/epl-v10.html.

    Contributors:
        Gunnar Wagenknecht - initial API and implementation
 -->
<!--
	1. You must check out the following projects to your workspace:

	     org.eclipse.gyrex.releng.builder

	2. To run automated JUnit tests headlessly, you will require Xvfb or Xvnc; without this,
	   UI tests will be launched into your current OS session (ie., on view port :0) and you may
	   inadvertently interact with them. (Non-UI tests can be run without fear of accidental
	   interaction and do not have this requirement.)

	3. You must also ensure that the path specified for Java, and the version of Eclipse stated in
	   build.properties are correct for your machine. Edit these properties in build.local.properties
	   to suit your needs. See build.local.properties.example
-->
<project default="run" name="org.eclipse.gyrex.releng-builder-build">
	<description>Run a Gyrex build using PDE Build</description>

	<!-- set a writable build root (default to /t[e]mp/build) -->
	<condition property="writableBuildRoot" value="/temp/build" else="/tmp/build">
		<os family="windows" />
	</condition>

	<!-- set timestamp for the build -->
	<tstamp>
		<format property="buildTimestamp" pattern="yyyyMMddHHmm" />
	</tstamp>

	<!-- load local build specific properties -->
	<!-- (we allow custom local properties file via -Dbuild.local.properties=... -->
	<property name="build.local.properties" location="build.local.properties" />
	<property file="${build.local.properties}" />

	<!-- load project build properties -->
	<property name="build.project.properties" location="build.properties" />
	<property file="${build.project.properties}" />

	<!-- load default build properties -->
	<property name="build.default.properties" location="common/build.default.properties" />
	<property file="${build.default.properties}" />

	<!-- set default for the build directory -->
	<property name="buildDirectory" value="${writableBuildRoot}" />

	<!-- import common build helpers -->
	<import file="common/buildhelpers.xml" />


    <!-- ===============================
         target: run
         =============================== -->
	<target name="run" description="Performs a Gyrex build. This is usally invoked from a vanilla Ant process.">

		<!-- initialize/read build identifiers -->
		<antcall target="label.properties.init"/>

		<!-- set directory where the basebuilder can be found -->
		<property name="org.eclipse.releng.basebuilder" value="${writableBuildRoot}/org.eclipse.releng.basebuilder" />

		<!-- bootstrap basebuilder if necessary -->
		<antcall target="bootstrap-org.eclipse.releng.basebuilder" />

		<!-- execute Eclipse Ant to perform the build -->
		<antrunner
			target="runInEclipse"
			buildfile="${ant.file.org.eclipse.gyrex.releng-builder-build}"
			workspace="${buildDirectory}/workspace"
			dir="${org.eclipse.releng.basebuilder}">
			<jvmargs>
		        <arg value="-DwritableBuildRoot=${writableBuildRoot}" />
			</jvmargs>
		</antrunner>
	</target>


    <!-- ===============================
         target: runInHudson
         =============================== -->
	<target name="runInHudson" description="Hudson Target for performing a Gyrex build. Expects certain parameters from Hudson.">

		<!--

		    Note, in order to pass local build properties to a Hudson build
		    you should configure a "Shell" task to be executed befor this
		    Ant script. This task can generate a build.local.properties file.

    		    <snip>
                    # generate local build properties
                    buildLocalProps=org.eclipse.gyrex/releng/org.eclipse.gyrex.releng/builder/build.local.properties
                    rm -f $buildLocalProps
                    touch $buildLocalProps
                    echo J2SE-1.4=/shared/common/j2sdk1.4.2_19/jre/lib/rt.jar >> $buildLocalProps
                    echo J2SE-1.5=/shared/common/jdk-1.5.0_16/jre/lib/rt.jar >> $buildLocalProps
                    echo JavaSE-1.6=/shared/common/jdk-1.6.0_10/jre/lib/rt.jar >> $buildLocalProps
                    echo CDC-1.0/Foundation-1.0=/shared/common/org.eclipse.sdk-feature/libs/ee.foundation-1.0.jar >> $buildLocalProps
                    echo CDC-1.1/Foundation-1.1=/shared/common/org.eclipse.sdk-feature/libs/ee.foundation.jar >> $buildLocalProps
                    echo OSGi/Minimum-1.2=/shared/common/org.eclipse.sdk-feature/libs/ee.minimum-1.2.0.jar >> $buildLocalProps
                    echo org.eclipse.update.jarprocessor.pack200=/shared/common/ibm-java2-ppc-50/bin >> $buildLocalProps
                    echo eclipse.p2.MD5Check=false >> $buildLocalProps
                    echo org.eclipse.releng.basebuilder=/opt/public/cbi/build/org.eclipse.releng.basebuilder_R36_M4 >> $buildLocalProps
                </snip>

            In the Ant script configuration you should (only) set the following
            property and point to this target.

                <snip>
                    writableBuildRoot=$WORKSPACE/build
                </snip>

            The following Hudson parameters will be supported for parameterized builds.

                <snip>
                    BUILD_TYPE (one of N,I,S or R; defaults to I)
                </snip>

            That's all.

		-->

		<!-- load properties from the environment -->
		<property environment="env" />
		<condition property="buildType" value="${env.BUILD_TYPE}">
			<isset property="env.BUILD_TYPE" />
		</condition>
		<condition property="buildServer" value="${env.BUILD_URL}">
			<isset property="env.BUILD_URL" />
		</condition>

		<echo message="Hudson build ID: ${env.BUILD_ID}"/>
	    <echo message="Hudson build number: ${env.BUILD_NUMBER}"/>

		<!-- execute the run target -->
		<antcall target="run"/>

	</target>


    <!-- ===============================
         target: runInEclipse
         =============================== -->
	<target name="runInEclipse" description="Performs a Gyrex build from inside a running Eclipse instance.">

		<!-- initialize/read build identifiers -->
		<antcall target="label.properties.init"/>

		<!-- print build information -->
		<echo message="Gyrex build running on: {buildServer}"/>
		<echo message="Gyrex build type: {buildType}"/>
		<echo message="Gyrex build id: {buildId}"/>
		<echo message="Gyrex build label: {buildLabel}"/>

		<!-- build the sdk -->
		<ant antfile="configs/sdk/build.xml"/>

	</target>

</project>
